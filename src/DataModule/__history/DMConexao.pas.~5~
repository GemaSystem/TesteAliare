unit DMConexao;

interface

uses
  System.SysUtils, System.Classes, Data.DB, Data.SqlExpr,
  Data.DBXFirebird, System.IniFiles;

type
  TdtmConexao = class(TDataModule)
    SqlConexao: TSQLConnection;
    procedure DataModuleCreate(Sender: TObject);
    procedure SqlConexaoBeforeConnect(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  dtmConexao: TdtmConexao;

implementation

{%CLASSGROUP 'Vcl.Controls.TControl'}

{$R *.dfm}

procedure TdtmConexao.DataModuleCreate(Sender: TObject);
begin
  SqlConexao.Connected := true;
end;

procedure TdtmConexao.SqlConexaoBeforeConnect(Sender: TObject);
var
  vIni : TIniFile;
  vBaseDados, vUsuario, vSenha: string;
begin
   vIni := TIniFile.Create('F:\Desenvolvimento\DesafioAliare_Delphi3\docs\Config\Config.ini');
   vBaseDados := vIni.ReadString('Geral', 'BaseDados', '');
   vUsuario := vIni.ReadString('Geral', 'Usuario', '');
   vSenha := vIni.ReadString('Geral', 'Senha', '');

    try
      // Passa os parametros para o Banco de Dados
      SqlConexao.Params.Clear;
      SqlConexao.Params.Values['DriverName'] := 'Firebird';
      SqlConexao.Params.Values['RoleName'] := 'RoleName';
      SqlConexao.Params.Values['SQLDialect'] := '3';
      SqlConexao.Params.Values['LocadeCode'] := '0000';
      SqlConexao.Params.Values['BlobSize'] := '-1';
      SqlConexao.Params.Values['CommitRetain'] := 'False';
      SqlConexao.Params.Values['WaitOnLocks'] := 'True';
      SqlConexao.Params.Values['IsolationLevel'] := 'ReadCommitted';
      SqlConexao.Params.Values['Trim Char'] := 'False';

      SqlConexao.Params.Values['DataBase'] :=vBaseDados;
      SqlConexao.Params.Values['User_Name'] := vUsuario;
      SqlConexao.Params.Values['Password'] := vSenha;
    except
    end;
end;

end.
